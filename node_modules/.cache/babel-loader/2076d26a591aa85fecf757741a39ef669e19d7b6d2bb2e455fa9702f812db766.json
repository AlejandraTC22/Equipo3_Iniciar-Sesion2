{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aletz\\\\Documents\\\\INGENIERIA\\\\8B\\\\DESARROLLO PROFESIONAL\\\\PARCIAL 2\\\\Equipo3_Login-main\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport DOMPurify from \"dompurify\"; // Para sanitizar los mensajes\nimport bcrypt from \"bcryptjs\"; // Para encriptar las contraseñas\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [form, setForm] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [comment, setComment] = useState(\"\");\n  const MAX_ATTEMPTS = 5;\n  const BLOCK_TIME = 5 * 60 * 1000; // 5 minutos\n\n  const validatePassword = password => {\n    const minLength = 8;\n    const hasUpperCase = /[A-Z]/.test(password);\n    const hasLowerCase = /[a-z]/.test(password);\n    const hasNumber = /[0-9]/.test(password);\n    const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\n    return password.length >= minLength && hasUpperCase && hasLowerCase && hasNumber && hasSpecialChar;\n  };\n\n  // Función de prueba para verificar la validación de la contraseña\n  const testPasswordValidation = () => {\n    const testPassword = \"Cauich*22\";\n    const isValid = validatePassword(testPassword);\n    console.log(`La contraseña \"${testPassword}\" es válida: ${isValid}`);\n  };\n  const handleRegister = async () => {\n    if (users.find(u => u.username === form.username)) {\n      alert(\"El usuario ya existe\");\n      return;\n    }\n    if (!validatePassword(form.password)) {\n      alert(\"La contraseña debe tener al menos 8 caracteres, incluir una letra mayúscula, una letra minúscula, un número y un carácter especial.\");\n      return;\n    }\n    const salt = await bcrypt.genSalt(10);\n    const passwordHash = await bcrypt.hash(form.password, salt);\n    setUsers([...users, {\n      username: form.username,\n      passwordHash,\n      loginAttempts: 0,\n      blockedUntil: null\n    }]);\n    alert(\"Usuario registrado\");\n  };\n  const handleLogin = async () => {\n    const userIndex = users.findIndex(u => u.username === form.username);\n    if (userIndex === -1) {\n      alert(\"Usuario no encontrado\");\n      return;\n    }\n    const user = users[userIndex];\n    const now = Date.now();\n    if (user.blockedUntil && user.blockedUntil > now) {\n      alert(\"Cuenta bloqueada. Intenta más tarde.\");\n      return;\n    }\n    const isMatch = await bcrypt.compare(form.password, user.passwordHash);\n    if (isMatch) {\n      setCurrentUser(user);\n      alert(\"Login exitoso\");\n      users[userIndex].loginAttempts = 0;\n      setUsers([...users]);\n    } else {\n      users[userIndex].loginAttempts += 1;\n      if (users[userIndex].loginAttempts >= MAX_ATTEMPTS) {\n        users[userIndex].blockedUntil = now + BLOCK_TIME;\n        alert(\"Cuenta bloqueada por múltiples intentos fallidos.\");\n      } else {\n        alert(\"Credenciales inválidas\");\n      }\n      setUsers([...users]);\n    }\n  };\n  const handleMessage = () => {\n    const sanitizedComment = DOMPurify.sanitize(comment);\n    setMessages([...messages, sanitizedComment]);\n  };\n\n  // Llamar a la función de prueba para verificar la validación de la contraseña\n  testPasswordValidation();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login / Registro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Usuario\",\n        value: form.username,\n        onChange: e => setForm({\n          ...form,\n          username: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Contrase\\xF1a\",\n        value: form.password,\n        onChange: e => setForm({\n          ...form,\n          password: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRegister,\n          className: \"btn\",\n          children: \"Registrarse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogin,\n          className: \"btn\",\n          children: \"Iniciar Sesi\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), currentUser && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\xC1rea de comentarios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Escribe un mensaje\",\n        value: comment,\n        onChange: e => setComment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleMessage,\n        className: \"btn\",\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-list\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"message\",\n          children: msg\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"t1nQDRx2nN/qYyICzWqCTQppo+w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","DOMPurify","bcrypt","jsxDEV","_jsxDEV","App","_s","users","setUsers","messages","setMessages","currentUser","setCurrentUser","form","setForm","username","password","comment","setComment","MAX_ATTEMPTS","BLOCK_TIME","validatePassword","minLength","hasUpperCase","test","hasLowerCase","hasNumber","hasSpecialChar","length","testPasswordValidation","testPassword","isValid","console","log","handleRegister","find","u","alert","salt","genSalt","passwordHash","hash","loginAttempts","blockedUntil","handleLogin","userIndex","findIndex","user","now","Date","isMatch","compare","handleMessage","sanitizedComment","sanitize","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","msg","index","_c","$RefreshReg$"],"sources":["C:/Users/aletz/Documents/INGENIERIA/8B/DESARROLLO PROFESIONAL/PARCIAL 2/Equipo3_Login-main/src/App.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport DOMPurify from \"dompurify\"; // Para sanitizar los mensajes\nimport bcrypt from \"bcryptjs\"; // Para encriptar las contraseñas\nimport \"./App.css\";\n\ninterface User {\n  username: string;\n  passwordHash: string;\n  loginAttempts: number;\n  blockedUntil: number | null;\n}\n\nconst App = () => {\n  const [users, setUsers] = useState<User[]>([]);\n  const [messages, setMessages] = useState<string[]>([]);\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n  const [form, setForm] = useState({ username: \"\", password: \"\" });\n  const [comment, setComment] = useState(\"\");\n\n  const MAX_ATTEMPTS = 5;\n  const BLOCK_TIME = 5 * 60 * 1000; // 5 minutos\n\n  const validatePassword = (password: string) => {\n    const minLength = 8;\n    const hasUpperCase = /[A-Z]/.test(password);\n    const hasLowerCase = /[a-z]/.test(password);\n    const hasNumber = /[0-9]/.test(password);\n    const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\n\n    return (\n      password.length >= minLength &&\n      hasUpperCase &&\n      hasLowerCase &&\n      hasNumber &&\n      hasSpecialChar\n    );\n  };\n\n  // Función de prueba para verificar la validación de la contraseña\n  const testPasswordValidation = () => {\n    const testPassword = \"Cauich*22\";\n    const isValid = validatePassword(testPassword);\n    console.log(`La contraseña \"${testPassword}\" es válida: ${isValid}`);\n  };\n\n  const handleRegister = async () => {\n    if (users.find((u) => u.username === form.username)) {\n      alert(\"El usuario ya existe\");\n      return;\n    }\n\n    if (!validatePassword(form.password)) {\n      alert(\"La contraseña debe tener al menos 8 caracteres, incluir una letra mayúscula, una letra minúscula, un número y un carácter especial.\");\n      return;\n    }\n\n    const salt = await bcrypt.genSalt(10);\n    const passwordHash = await bcrypt.hash(form.password, salt);\n\n    setUsers([...users, { username: form.username, passwordHash, loginAttempts: 0, blockedUntil: null }]);\n    alert(\"Usuario registrado\");\n  };\n\n  const handleLogin = async () => {\n    const userIndex = users.findIndex((u) => u.username === form.username);\n    if (userIndex === -1) {\n      alert(\"Usuario no encontrado\");\n      return;\n    }\n\n    const user = users[userIndex];\n    const now = Date.now();\n\n    if (user.blockedUntil && user.blockedUntil > now) {\n      alert(\"Cuenta bloqueada. Intenta más tarde.\");\n      return;\n    }\n\n    const isMatch = await bcrypt.compare(form.password, user.passwordHash);\n    if (isMatch) {\n      setCurrentUser(user);\n      alert(\"Login exitoso\");\n      users[userIndex].loginAttempts = 0;\n      setUsers([...users]);\n    } else {\n      users[userIndex].loginAttempts += 1;\n      if (users[userIndex].loginAttempts >= MAX_ATTEMPTS) {\n        users[userIndex].blockedUntil = now + BLOCK_TIME;\n        alert(\"Cuenta bloqueada por múltiples intentos fallidos.\");\n      } else {\n        alert(\"Credenciales inválidas\");\n      }\n      setUsers([...users]);\n    }\n  };\n\n  const handleMessage = () => {\n    const sanitizedComment = DOMPurify.sanitize(comment);\n    setMessages([...messages, sanitizedComment]);\n  };\n\n  // Llamar a la función de prueba para verificar la validación de la contraseña\n  testPasswordValidation();\n\n  return (\n    <div className=\"container\">\n      <h2>Login / Registro</h2>\n      <div className=\"form-container\">\n        <input\n          type=\"text\"\n          placeholder=\"Usuario\"\n          value={form.username}\n          onChange={(e) => setForm({ ...form, username: e.target.value })}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Contraseña\"\n          value={form.password}\n          onChange={(e) => setForm({ ...form, password: e.target.value })}\n        />\n        <div className=\"button-group\">\n          <button onClick={handleRegister} className=\"btn\">Registrarse</button>\n          <button onClick={handleLogin} className=\"btn\">Iniciar Sesión</button>\n        </div>\n      </div>\n\n      {currentUser && (\n        <div className=\"comment-section\">\n          <h2>Área de comentarios</h2>\n          <textarea\n            placeholder=\"Escribe un mensaje\"\n            value={comment}\n            onChange={(e) => setComment(e.target.value)}\n          />\n          <button onClick={handleMessage} className=\"btn\">Enviar</button>\n          <div className=\"message-list\">\n            {messages.map((msg, index) => (\n              <p key={index} className=\"message\">{msg}</p>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}